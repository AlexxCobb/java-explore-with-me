drop table IF EXISTS users, categories, events, requests, compilations, compilation_events, comments, likes cascade;

CREATE TABLE IF NOT EXISTS users (
  id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  email VARCHAR(254) NOT NULL,
  name VARCHAR(250) NOT NULL,
  CONSTRAINT pk_user PRIMARY KEY (id),
  CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS categories (
  id int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(50) NOT NULL,
  CONSTRAINT pk_category PRIMARY KEY (id),
  CONSTRAINT UQ_CATEGORY_NAME UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS events (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  annotation VARCHAR(2000) NOT NULL,
  category_id INT NOT NULL,
  confirmed_requests INT NOT NULL,
  created_date timestamp WITHOUT TIME ZONE NOT NULL,
  description VARCHAR(7000) NOT NULL,
  event_date timestamp WITHOUT TIME ZONE NOT NULL,
  initiator_id BIGINT NOT NULL,
  latitude FLOAT NOT NULL,
  longitude FLOAT NOT NULL,
  is_paid BOOLEAN NOT NULL,
  participant_limit INT NOT NULL,
  published_date timestamp WITHOUT TIME ZONE,
  is_need_moderate BOOLEAN NOT NULL,
  state VARCHAR(20) NOT NULL,
  title VARCHAR(120) NOT NULL,
  views INT,
  CONSTRAINT pk_event PRIMARY KEY (id),
  CONSTRAINT events_users_fk FOREIGN KEY (initiator_id) REFERENCES users(id),
  CONSTRAINT events_categories_fk FOREIGN KEY (category_id) REFERENCES categories(id)
);

CREATE TABLE IF NOT EXISTS requests (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  created_date timestamp WITHOUT TIME ZONE NOT NULL,
  event_id BIGINT NOT NULL,
  requester_id BIGINT NOT NULL,
  status VARCHAR(20) NOT NULL,
  CONSTRAINT pk_request PRIMARY KEY (id),
  CONSTRAINT requests_users_fk FOREIGN KEY (requester_id) REFERENCES users(id),
  CONSTRAINT requests_events_fk FOREIGN KEY (event_id) REFERENCES events(id)
);

CREATE TABLE IF NOT EXISTS compilations (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  title VARCHAR(50) NOT NULL,
  is_pinned BOOLEAN NOT NULL,
  CONSTRAINT pk_compilation PRIMARY KEY (id),
  CONSTRAINT UQ_COMPILATION_TITLE UNIQUE (title)
);

CREATE TABLE IF NOT EXISTS compilation_events (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  event_id BIGINT NOT NULL,
  compilation_id BIGINT NOT NULL,
  CONSTRAINT pk_compilation_event PRIMARY KEY (id),
  CONSTRAINT compilations_events_compilations_fk FOREIGN KEY (compilation_id) REFERENCES compilations(id),
  CONSTRAINT compilation_events_events_fk FOREIGN KEY (event_id) REFERENCES events(id)
);

CREATE TABLE IF NOT EXISTS comments (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  created_date timestamp WITHOUT TIME ZONE NOT NULL,
  event_id BIGINT NOT NULL,
  author_id BIGINT NOT NULL,
  text VARCHAR(5000) NOT NULL,
  status VARCHAR(20) NOT NULL,
  likes INT,
  dislikes INT,
  CONSTRAINT pk_comment PRIMARY KEY (id),
  CONSTRAINT comments_users_fk FOREIGN KEY (author_id) REFERENCES users(id),
  CONSTRAINT comments_events_fk FOREIGN KEY (event_id) REFERENCES events(id)
);

CREATE TABLE IF NOT EXISTS likes (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  user_id BIGINT NOT NULL,
  comment_id BIGINT NOT NULL,
  is_like BOOLEAN NOT NULL,
  CONSTRAINT pk_like PRIMARY KEY (id),
  CONSTRAINT likes_users_fk FOREIGN KEY (user_id) REFERENCES users(id),
  CONSTRAINT likes_comments_fk FOREIGN KEY (comment_id) REFERENCES comments(id)
);